(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>c});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([n.id,":root{\n    --color-sky:#4dcbd4;\n    --color-gray:#666;\n    \n}\n*{\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nmain{\n    margin-left:auto;\n    margin-right:auto;\n    width:65%;\n    padding:1.5rem;\n}\n/*  Header/Main/Footer */\nheader,footer{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--color-gray);\n    color:white;\n    font-family:Arial, Helvetica, sans-serif\n}\nheader .material-symbols-outlined{\n    display:inline-block;\n    font-size:50px;\n    color:var(--color-sky);\n}\n/*************************/\n\n/* div.search */\ndiv.search{\npadding:1rem;\ndisplay:flex;\njustify-content: center;\n\n\n}\ndiv.search input{\n    padding:0.5rem;\n    width:50%;\n    outline:none;\n    border:2px solid var(--color-gray);\n}\ndiv.search input:focus{\n    border-color:var(--color-sky)\n}\ndiv.search button{\nbackground-color: var(--color-sky);\ncolor:white;\nborder-color:var(--color-gray);\n}\n/*************/\n/* div.current */\ndiv.current{\n    padding:2rem 3rem;\n    display:flex;\n    border-top:1px solid var(--color-gray);\n    border-bottom:1px solid var(--color-gray);\n}\n\ndiv.current>div{\n    padding:1rem;\n}\n.current .generalData{\n    padding:1rem;\n    display:flex;\n    flex-direction:column;\n    align-items: center;\n    margin-right:50px;\n}\n.current .generalData h2 {\n  display: flex;\n  align-items: center;\n  font-weight: bolder;\n  font-size:2.1rem;\n  color:var(--color-sky);\n    \n}\n.current .generalData h2 small {\n    margin-left:10px;\n    font-size:0.9rem;\n\n    color:var(--color-gray);\n    \n}\n.current .generalData .mainTemp{\n    font-size:100px;\n}\n.current .generalData .condition img{\n    width:100px;\n}\n.current .hourlyData{\n    display:flex;\n    overflow-x:scroll;\n    padding:1rem;\n}\n.hour{\n    display:flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    /* min-width:100px; */\n}\n.hour p{\n    font-size:1.2rem\n}\n@media Screen and (max-width:991px){\n    div.current{\n        padding:0;\n        flex-direction: column;\n    }\n    div.current .generalData{\n        width:100%;\n        margin:none;\n    }\n    div.current .hourlyData{\n        width:100%;\n        padding:0;\n        margin:none;\n        display:grid;\n        grid-template-columns: repeat(3,33%);\n        overflow-x: none;\n    }\n}\n/**************/\n\n/* div.days */\n\ntable.days{\n    width:100%;\n\n}\ntable.days tr{\n    display:grid;\n    grid-template-columns: repeat(6,1fr);\n    place-items: center;\n}\ntable.days tr:not(:first-child){\n    border-top:1px solid var(--color-gray);\n}\ntable.days tr:nth-child(odd){\n    background-color: #eee;\n}\ntable.days tr th{\n    padding:1.5rem;\n    text-transform: uppercase;\n    color:var(--color-gray);\n    font-weight:400;\n    font-size:0.9rem;\n}\ntable.days tr td{\n  font-size:1.2rem\n\n}\n\n\n/*****************/","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,iBAAiB;;AAErB;AACA;IACI,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,SAAS;IACT,cAAc;AAClB;AACA,wBAAwB;AACxB;IACI,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,mCAAmC;IACnC,WAAW;IACX;AACJ;AACA;IACI,oBAAoB;IACpB,cAAc;IACd,sBAAsB;AAC1B;AACA,0BAA0B;;AAE1B,eAAe;AACf;AACA,YAAY;AACZ,YAAY;AACZ,uBAAuB;;;AAGvB;AACA;IACI,cAAc;IACd,SAAS;IACT,YAAY;IACZ,kCAAkC;AACtC;AACA;IACI;AACJ;AACA;AACA,kCAAkC;AAClC,WAAW;AACX,8BAA8B;AAC9B;AACA,cAAc;AACd,gBAAgB;AAChB;IACI,iBAAiB;IACjB,YAAY;IACZ,sCAAsC;IACtC,yCAAyC;AAC7C;;AAEA;IACI,YAAY;AAChB;AACA;IACI,YAAY;IACZ,YAAY;IACZ,qBAAqB;IACrB,mBAAmB;IACnB,iBAAiB;AACrB;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,gBAAgB;EAChB,sBAAsB;;AAExB;AACA;IACI,gBAAgB;IAChB,gBAAgB;;IAEhB,uBAAuB;;AAE3B;AACA;IACI,eAAe;AACnB;AACA;IACI,WAAW;AACf;AACA;IACI,YAAY;IACZ,iBAAiB;IACjB,YAAY;AAChB;AACA;IACI,YAAY;IACZ,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;IACnB,qBAAqB;AACzB;AACA;IACI;AACJ;AACA;IACI;QACI,SAAS;QACT,sBAAsB;IAC1B;IACA;QACI,UAAU;QACV,WAAW;IACf;IACA;QACI,UAAU;QACV,SAAS;QACT,WAAW;QACX,YAAY;QACZ,oCAAoC;QACpC,gBAAgB;IACpB;AACJ;AACA,eAAe;;AAEf,aAAa;;AAEb;IACI,UAAU;;AAEd;AACA;IACI,YAAY;IACZ,oCAAoC;IACpC,mBAAmB;AACvB;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,cAAc;IACd,yBAAyB;IACzB,uBAAuB;IACvB,eAAe;IACf,gBAAgB;AACpB;AACA;EACE;;AAEF;;;AAGA,kBAAkB",sourcesContent:[":root{\r\n    --color-sky:#4dcbd4;\r\n    --color-gray:#666;\r\n    \r\n}\r\n*{\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nmain{\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n    width:65%;\r\n    padding:1.5rem;\r\n}\r\n/*  Header/Main/Footer */\r\nheader,footer{\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: var(--color-gray);\r\n    color:white;\r\n    font-family:Arial, Helvetica, sans-serif\r\n}\r\nheader .material-symbols-outlined{\r\n    display:inline-block;\r\n    font-size:50px;\r\n    color:var(--color-sky);\r\n}\r\n/*************************/\r\n\r\n/* div.search */\r\ndiv.search{\r\npadding:1rem;\r\ndisplay:flex;\r\njustify-content: center;\r\n\r\n\r\n}\r\ndiv.search input{\r\n    padding:0.5rem;\r\n    width:50%;\r\n    outline:none;\r\n    border:2px solid var(--color-gray);\r\n}\r\ndiv.search input:focus{\r\n    border-color:var(--color-sky)\r\n}\r\ndiv.search button{\r\nbackground-color: var(--color-sky);\r\ncolor:white;\r\nborder-color:var(--color-gray);\r\n}\r\n/*************/\r\n/* div.current */\r\ndiv.current{\r\n    padding:2rem 3rem;\r\n    display:flex;\r\n    border-top:1px solid var(--color-gray);\r\n    border-bottom:1px solid var(--color-gray);\r\n}\r\n\r\ndiv.current>div{\r\n    padding:1rem;\r\n}\r\n.current .generalData{\r\n    padding:1rem;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items: center;\r\n    margin-right:50px;\r\n}\r\n.current .generalData h2 {\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bolder;\r\n  font-size:2.1rem;\r\n  color:var(--color-sky);\r\n    \r\n}\r\n.current .generalData h2 small {\r\n    margin-left:10px;\r\n    font-size:0.9rem;\r\n\r\n    color:var(--color-gray);\r\n    \r\n}\r\n.current .generalData .mainTemp{\r\n    font-size:100px;\r\n}\r\n.current .generalData .condition img{\r\n    width:100px;\r\n}\r\n.current .hourlyData{\r\n    display:flex;\r\n    overflow-x:scroll;\r\n    padding:1rem;\r\n}\r\n.hour{\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    /* min-width:100px; */\r\n}\r\n.hour p{\r\n    font-size:1.2rem\r\n}\r\n@media Screen and (max-width:991px){\r\n    div.current{\r\n        padding:0;\r\n        flex-direction: column;\r\n    }\r\n    div.current .generalData{\r\n        width:100%;\r\n        margin:none;\r\n    }\r\n    div.current .hourlyData{\r\n        width:100%;\r\n        padding:0;\r\n        margin:none;\r\n        display:grid;\r\n        grid-template-columns: repeat(3,33%);\r\n        overflow-x: none;\r\n    }\r\n}\r\n/**************/\r\n\r\n/* div.days */\r\n\r\ntable.days{\r\n    width:100%;\r\n\r\n}\r\ntable.days tr{\r\n    display:grid;\r\n    grid-template-columns: repeat(6,1fr);\r\n    place-items: center;\r\n}\r\ntable.days tr:not(:first-child){\r\n    border-top:1px solid var(--color-gray);\r\n}\r\ntable.days tr:nth-child(odd){\r\n    background-color: #eee;\r\n}\r\ntable.days tr th{\r\n    padding:1.5rem;\r\n    text-transform: uppercase;\r\n    color:var(--color-gray);\r\n    font-weight:400;\r\n    font-size:0.9rem;\r\n}\r\ntable.days tr td{\r\n  font-size:1.2rem\r\n\r\n}\r\n\r\n\r\n/*****************/"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);t&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),r.push(s))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],d=t.base?A[0]+t.base:A[0],s=a[d]||0,l="".concat(d," ").concat(s);a[d]=s+1;var u=e(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var m=o(p,t);t.byIndex=c,r.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);r[c].references--}for(var A=t(n,o),d=0;d<a.length;d++){var s=e(a[d]);0===r[s].references&&(r[s].updater(),r.splice(s,1))}a=A}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),a=e(569),i=e.n(a),c=e(565),A=e.n(c),d=e(216),s=e.n(d),l=e(589),u=e.n(l),p=e(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),r()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;let f=null,y=null,C=null,h=null;async function g(n,r){await async function(n,r){let e=await fetch(`http://api.weatherapi.com/v1/forecast.json?key=460a1173b5f94d639a712954240101&q=${n}&days=${r}`);e=await e.json(),f=e}(n,r),y={city:f.location.name,country:f.location.country,time:f.location.localtime,temp:f.current.temp_c,condition:f.current.condition.text,conditionIcon:f.current.condition.icon,humidity:f.current.humidity},function(){const n=[];for(let r=0;r<7;r+=1)n.push({date:f.forecast.forecastday[r].date,maxTemp:f.forecast.forecastday[r].day.maxtemp_c,minTemp:f.forecast.forecastday[r].day.mintemp_c,rain:f.forecast.forecastday[r].day.daily_chance_of_rain,condition:f.forecast.forecastday[r].day.condition.text,conditionIcon:f.forecast.forecastday[r].day.condition.icon,humidity:f.forecast.forecastday[r].day.avghumidity});C=n}(),function(){const n=[],r=(e=f.location.localtime,new Date(e).getHours());var e;for(let e=r;e<24;e++)n.push({hour:e,temp:f.forecast.forecastday[0].hour[e].temp_c,conditionIcon:f.forecast.forecastday[0].hour[e].condition.icon});for(let e=0;e<r;e+=1)n.push({hour:e,temp:f.forecast.forecastday[1].hour[e].temp_c,conditionIcon:f.forecast.forecastday[1].hour[e].condition.icon});h=n}()}function v(n,r,e){document.body.innerHTML="",function(){const n=document.createElement("div");n.classList.add("content"),document.body.append(n);const r=document.createElement("header");r.innerHTML='<span class="material-symbols-outlined">\n    partly_cloudy_day\n    </span><h1>WeatherX</h1>';const e=document.createElement("main"),t=document.createElement("footer");t.innerHTML="<p>copyright &copy;2023 Abdel-Rahman</p>",n.append(r,e,t)}(),function(){const n=document.querySelector("main"),r=document.createElement("div");r.classList.add("search");const e=document.createElement("input");e.placeholder="City",e.id="city";const t=document.createElement("button");t.textContent="Search",t.id="search",r.append(e,t),n.append(r)}(),function(n,r){const e=document.querySelector("main"),t=document.createElement("div");t.classList.add("current");const o=document.createElement("div");o.classList.add("generalData"),o.innerHTML=`\n    <h2>${n.city} <small>${n.country}</small></h2>\n    <div class="mainTemp">${n.temp}&deg;</div>\n    <div class=condition><img src='${n.conditionIcon}'></div>\n    `;const a=document.createElement("div");a.classList.add("hourlyData");for(let n=0;n<r.length;n+=1){const e=document.createElement("div");e.classList.add("hour"),e.innerHTML=`\n    <p>${r[n].hour}:00</p>\n    <img src=${r[n].conditionIcon}>\n    <p>${r[n].temp}&deg;</p>\n    `,a.append(e)}t.append(o,a),e.append(t)}(n,r),function(n){const r=document.querySelector("main"),e=document.createElement("table");e.classList.add("days");const t=document.createElement("tr");t.innerHTML="\n    <th>day</th>\n    <th>condition</th>\n    <th>high</th>\n    <th>low</th>\n    <th>humidity</th>\n    <th>chance of rain</th>\n    ",e.append(t);for(let r=0;r<n.length;r+=1){const t=document.createElement("tr");t.innerHTML=`<td>${o=n[r].date,["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][new Date(o).getDay()]}</td>\n        <td><img src='${n[r].conditionIcon}'></td>\n        <td>${n[r].maxTemp}&deg;</td>\n        <td>${n[r].minTemp}&deg;</td>\n        <td>${n[r].humidity}%</td>\n        <td>${n[r].rain}%</td>\n        `,e.append(t)}var o;r.append(e)}(e)}function B(){const n=document.getElementById("search"),r=document.getElementById("city");n.addEventListener("click",(async()=>{console.log(r.value);const n=r.value;await g(`'${n}'`,7),v(y,h,C),B()}))}!async function(){await g("Montreal",7),v(y,h,C),B()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,